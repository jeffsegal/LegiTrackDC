{"version":3,"sources":["Gruntfile.js"],"names":[],"mappings":"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","file":"Gruntfile-compiled.js","sourcesContent":["// Generated on 2016-02-12 using generator-angular-fullstack 3.3.0\n'use strict';\n\nmodule.exports = function (grunt) {\n  var localConfig;\n  try {\n    localConfig = require('./server/config/local.env');\n  } catch(e) {\n    localConfig = {};\n  }\n\n  // Load grunt tasks automatically, when needed\n  require('jit-grunt')(grunt, {\n    express: 'grunt-express-server',\n    useminPrepare: 'grunt-usemin',\n    ngtemplates: 'grunt-angular-templates',\n    cdnify: 'grunt-google-cdn',\n    protractor: 'grunt-protractor-runner',\n    buildcontrol: 'grunt-build-control',\n    istanbul_check_coverage: 'grunt-mocha-istanbul',\n    ngconstant: 'grunt-ng-constant'\n  });\n\n  // Time how long tasks take. Can help when optimizing build times\n  require('time-grunt')(grunt);\n\n  // Define the configuration for all the tasks\n  grunt.initConfig({\n\n    // Project settings\n    pkg: grunt.file.readJSON('package.json'),\n    yeoman: {\n      // configurable paths\n      client: require('./bower.json').appPath || 'client',\n      server: 'server',\n      dist: 'dist'\n    },\n    express: {\n      options: {\n        port: process.env.PORT || 9000\n      },\n      dev: {\n        options: {\n          script: '<%= yeoman.server %>',\n          debug: true\n        }\n      },\n      prod: {\n        options: {\n          script: '<%= yeoman.dist %>/<%= yeoman.server %>'\n        }\n      }\n    },\n    open: {\n      server: {\n        url: 'http://localhost:<%= express.options.port %>'\n      }\n    },\n    watch: {\n      babel: {\n        files: ['<%= yeoman.client %>/{app,components}/**/!(*.spec|*.mock).js'],\n        tasks: ['newer:babel:client']\n      },\n      ngconstant: {\n        files: ['<%= yeoman.server %>/config/environment/shared.js'],\n        tasks: ['ngconstant']\n      },\n      injectJS: {\n        files: [\n          '<%= yeoman.client %>/{app,components}/**/!(*.spec|*.mock).js',\n          '!<%= yeoman.client %>/app/app.js'\n        ],\n        tasks: ['injector:scripts']\n      },\n      injectCss: {\n        files: ['<%= yeoman.client %>/{app,components}/**/*.css'],\n        tasks: ['injector:css']\n      },\n      mochaTest: {\n        files: ['<%= yeoman.server %>/**/*.{spec,integration}.js'],\n        tasks: ['env:test', 'mochaTest']\n      },\n      jsTest: {\n        files: ['<%= yeoman.client %>/{app,components}/**/*.{spec,mock}.js'],\n        tasks: ['newer:jshint:all', 'wiredep:test', 'karma']\n      },\n      injectSass: {\n        files: ['<%= yeoman.client %>/{app,components}/**/*.{scss,sass}'],\n        tasks: ['injector:sass']\n      },\n      sass: {\n        files: ['<%= yeoman.client %>/{app,components}/**/*.{scss,sass}'],\n        tasks: ['sass', 'postcss']\n      },\n      jade: {\n        files: ['<%= yeoman.client %>/{app,components}/**/*.jade'],\n        tasks: ['jade']\n      },\n      gruntfile: {\n        files: ['Gruntfile.js']\n      },\n      livereload: {\n        files: [\n          '{.tmp,<%= yeoman.client %>}/{app,components}/**/*.{css,html}',\n          '{.tmp,<%= yeoman.client %>}/{app,components}/**/!(*.spec|*.mock).js',\n          '<%= yeoman.client %>/assets/images/{,*//*}*.{png,jpg,jpeg,gif,webp,svg}'\n        ],\n        options: {\n          livereload: true\n        }\n      },\n      express: {\n        files: ['<%= yeoman.server %>/**/*.{js,json}'],\n        tasks: ['express:dev', 'wait'],\n        options: {\n          livereload: true,\n          spawn: false //Without this option specified express won't be reloaded\n        }\n      },\n      bower: {\n        files: ['bower.json'],\n        tasks: ['wiredep']\n      },\n    },\n\n    // Make sure code styles are up to par and there are no obvious mistakes\n    jshint: {\n      options: {\n        jshintrc: '<%= yeoman.client %>/.jshintrc',\n        reporter: require('jshint-stylish')\n      },\n      server: {\n        options: {\n          jshintrc: '<%= yeoman.server %>/.jshintrc'\n        },\n        src: ['<%= yeoman.server %>/**/!(*.spec|*.integration).js']\n      },\n      serverTest: {\n        options: {\n          jshintrc: '<%= yeoman.server %>/.jshintrc-spec'\n        },\n        src: ['<%= yeoman.server %>/**/*.{spec,integration}.js']\n      },\n      all: ['<%= yeoman.client %>/{app,components}/**/!(*.spec|*.mock|app.constant).js'],\n      test: {\n        src: ['<%= yeoman.client %>/{app,components}/**/*.{spec,mock}.js']\n      }\n    },\n\n    jscs: {\n      options: {\n        config: \".jscsrc\"\n      },\n      main: {\n        files: {\n          src: [\n            '<%= yeoman.client %>/app/**/*.js',\n            '<%= yeoman.server %>/**/*.js'\n          ]\n        }\n      }\n    },\n\n    // Empties folders to start fresh\n    clean: {\n      dist: {\n        files: [{\n          dot: true,\n          src: [\n            '.tmp',\n            '<%= yeoman.dist %>/!(.git*|.openshift|Procfile)**'\n          ]\n        }]\n      },\n      server: '.tmp'\n    },\n\n    // Add vendor prefixed styles\n    postcss: {\n      options: {\n        map: true,\n        processors: [\n          require('autoprefixer')({browsers: ['last 2 version']})\n        ]\n      },\n      dist: {\n        files: [{\n          expand: true,\n          cwd: '.tmp/',\n          src: '{,*/}*.css',\n          dest: '.tmp/'\n        }]\n      }\n    },\n\n    // Debugging with node inspector\n    'node-inspector': {\n      custom: {\n        options: {\n          'web-host': 'localhost'\n        }\n      }\n    },\n\n    // Use nodemon to run server in debug mode with an initial breakpoint\n    nodemon: {\n      debug: {\n        script: '<%= yeoman.server %>',\n        options: {\n          nodeArgs: ['--debug-brk'],\n          env: {\n            PORT: process.env.PORT || 9000\n          },\n          callback: function (nodemon) {\n            nodemon.on('log', function (event) {\n              console.log(event.colour);\n            });\n\n            // opens browser on initial server start\n            nodemon.on('config:update', function () {\n              setTimeout(function () {\n                require('open')('http://localhost:8080/debug?port=5858');\n              }, 500);\n            });\n          }\n        }\n      }\n    },\n\n    // Automatically inject Bower components into the app and karma.conf.js\n    wiredep: {\n      options: {\n        exclude: [\n          ///bootstrap.js/,\n          '/json3/',\n          '/es5-shim/',\n          /font-awesome\\.css/,\n          /bootstrap-sass-official/,\n          /bootstrap-social\\.css/\n        ]\n      },\n      client: {\n        src: '<%= yeoman.client %>/index.html',\n        ignorePath: '<%= yeoman.client %>/',\n      },\n      test: {\n        src: './karma.conf.js',\n        devDependencies: true\n      }\n    },\n\n    // Renames files for browser caching purposes\n    filerev: {\n      dist: {\n        src: [\n          '<%= yeoman.dist %>/<%= yeoman.client %>/!(bower_components){,*/}*.{js,css}',\n          '<%= yeoman.dist %>/<%= yeoman.client %>/assets/images/{,*/}*.{png,jpg,jpeg,gif,webp,svg}',\n          '<%= yeoman.dist %>/<%= yeoman.client %>/assets/fonts/*'\n        ]\n      }\n    },\n\n    // Reads HTML for usemin blocks to enable smart builds that automatically\n    // concat, minify and revision files. Creates configurations in memory so\n    // additional tasks can operate on them\n    useminPrepare: {\n      html: ['<%= yeoman.client %>/index.html'],\n      options: {\n        dest: '<%= yeoman.dist %>/<%= yeoman.client %>'\n      }\n    },\n\n    // Performs rewrites based on rev and the useminPrepare configuration\n    usemin: {\n      html: ['<%= yeoman.dist %>/<%= yeoman.client %>/{,!(bower_components)/**/}*.html'],\n      css: ['<%= yeoman.dist %>/<%= yeoman.client %>/!(bower_components){,*/}*.css'],\n      js: ['<%= yeoman.dist %>/<%= yeoman.client %>/!(bower_components){,*/}*.js'],\n      options: {\n        assetsDirs: [\n          '<%= yeoman.dist %>/<%= yeoman.client %>',\n          '<%= yeoman.dist %>/<%= yeoman.client %>/assets/images'\n        ],\n        // This is so we update image references in our ng-templates\n        patterns: {\n          js: [\n            [/(assets\\/images\\/.*?\\.(?:gif|jpeg|jpg|png|webp|svg))/gm, 'Update the JS to reference our revved images']\n          ]\n        }\n      }\n    },\n\n    // The following *-min tasks produce minified files in the dist folder\n    imagemin: {\n      dist: {\n        files: [{\n          expand: true,\n          cwd: '<%= yeoman.client %>/assets/images',\n          src: '{,*/}*.{png,jpg,jpeg,gif,svg}',\n          dest: '<%= yeoman.dist %>/<%= yeoman.client %>/assets/images'\n        }]\n      }\n    },\n\n    // Allow the use of non-minsafe AngularJS files. Automatically makes it\n    // minsafe compatible so Uglify does not destroy the ng references\n    ngAnnotate: {\n      dist: {\n        files: [{\n          expand: true,\n          cwd: '.tmp/concat',\n          src: '**/*.js',\n          dest: '.tmp/concat'\n        }]\n      }\n    },\n\n    // Dynamically generate angular constant `appConfig` from\n    // `server/config/environment/shared.js`\n    ngconstant: {\n      options: {\n        name: 'legitrackApp.constants',\n        dest: '<%= yeoman.client %>/app/app.constant.js',\n        deps: [],\n        wrap: true,\n        configPath: '<%= yeoman.server %>/config/environment/shared'\n      },\n      app: {\n        constants: function() {\n          return {\n            appConfig: require('./' + grunt.config.get('ngconstant.options.configPath'))\n          };\n        }\n      }\n    },\n\n    // Package all the html partials into a single javascript payload\n    ngtemplates: {\n      options: {\n        // This should be the name of your apps angular module\n        module: 'legitrackApp',\n        htmlmin: {\n          collapseBooleanAttributes: true,\n          collapseWhitespace: true,\n          removeAttributeQuotes: true,\n          removeEmptyAttributes: true,\n          removeRedundantAttributes: true,\n          removeScriptTypeAttributes: true,\n          removeStyleLinkTypeAttributes: true\n        },\n        usemin: 'app/app.js'\n      },\n      main: {\n        cwd: '<%= yeoman.client %>',\n        src: ['{app,components}/**/*.html'],\n        dest: '.tmp/templates.js'\n      },\n      tmp: {\n        cwd: '.tmp',\n        src: ['{app,components}/**/*.html'],\n        dest: '.tmp/tmp-templates.js'\n      }\n    },\n\n    // Replace Google CDN references\n    cdnify: {\n      dist: {\n        html: ['<%= yeoman.dist %>/<%= yeoman.client %>/*.html']\n      }\n    },\n\n    // Copies remaining files to places other tasks can use\n    copy: {\n      dist: {\n        files: [{\n          expand: true,\n          dot: true,\n          cwd: '<%= yeoman.client %>',\n          dest: '<%= yeoman.dist %>/<%= yeoman.client %>',\n          src: [\n            '*.{ico,png,txt}',\n            '.htaccess',\n            'bower_components/**/*',\n            'assets/images/{,*/}*.{webp}',\n            'assets/fonts/**/*',\n            'index.html'\n          ]\n        }, {\n          expand: true,\n          cwd: '.tmp/images',\n          dest: '<%= yeoman.dist %>/<%= yeoman.client %>/assets/images',\n          src: ['generated/*']\n        }, {\n          expand: true,\n          dest: '<%= yeoman.dist %>',\n          src: [\n            'package.json',\n            '<%= yeoman.server %>/**/*',\n            '!<%= yeoman.server %>/config/local.env.sample.js'\n          ]\n        }]\n      },\n      styles: {\n        expand: true,\n        cwd: '<%= yeoman.client %>',\n        dest: '.tmp/',\n        src: ['{app,components}/**/*.css']\n      }\n    },\n\n    buildcontrol: {\n      options: {\n        dir: '<%= yeoman.dist %>',\n        commit: true,\n        push: true,\n        connectCommits: false,\n        message: 'Built %sourceName% from commit %sourceCommit% on branch %sourceBranch%'\n      },\n      heroku: {\n        options: {\n          remote: 'heroku',\n          branch: 'master'\n        }\n      },\n      openshift: {\n        options: {\n          remote: 'openshift',\n          branch: 'master'\n        }\n      }\n    },\n\n    // Run some tasks in parallel to speed up the build process\n    concurrent: {\n      pre: [\n        'injector:sass',\n        'ngconstant'\n      ],\n      server: [\n        'newer:babel:client',\n        'jade',\n        'sass',\n      ],\n      test: [\n        'newer:babel:client',\n        'jade',\n        'sass',\n      ],\n      debug: {\n        tasks: [\n          'nodemon',\n          'node-inspector'\n        ],\n        options: {\n          logConcurrentOutput: true\n        }\n      },\n      dist: [\n        'newer:babel:client',\n        'jade',\n        'sass',\n        'imagemin'\n      ]\n    },\n\n    // Test settings\n    karma: {\n      unit: {\n        configFile: 'karma.conf.js',\n        singleRun: true\n      }\n    },\n\n    mochaTest: {\n      options: {\n        reporter: 'spec',\n        require: 'mocha.conf.js',\n        timeout: 5000 // set default mocha spec timeout\n      },\n      unit: {\n        src: ['<%= yeoman.server %>/**/*.spec.js']\n      },\n      integration: {\n        src: ['<%= yeoman.server %>/**/*.integration.js']\n      }\n    },\n\n    mocha_istanbul: {\n      unit: {\n        options: {\n          excludes: ['**/*.{spec,mock,integration}.js'],\n          reporter: 'spec',\n          require: ['mocha.conf.js'],\n          mask: '**/*.spec.js',\n          coverageFolder: 'coverage/server/unit'\n        },\n        src: '<%= yeoman.server %>'\n      },\n      integration: {\n        options: {\n          excludes: ['**/*.{spec,mock,integration}.js'],\n          reporter: 'spec',\n          require: ['mocha.conf.js'],\n          mask: '**/*.integration.js',\n          coverageFolder: 'coverage/server/integration'\n        },\n        src: '<%= yeoman.server %>'\n      }\n    },\n\n    istanbul_check_coverage: {\n      default: {\n        options: {\n          coverageFolder: 'coverage/**',\n          check: {\n            lines: 80,\n            statements: 80,\n            branches: 80,\n            functions: 80\n          }\n        }\n      }\n    },\n\n    protractor: {\n      options: {\n        configFile: 'protractor.conf.js'\n      },\n      chrome: {\n        options: {\n          args: {\n            browser: 'chrome'\n          }\n        }\n      }\n    },\n\n    env: {\n      test: {\n        NODE_ENV: 'test'\n      },\n      prod: {\n        NODE_ENV: 'production'\n      },\n      all: localConfig\n    },\n\n    // Compiles Jade to html\n    jade: {\n      compile: {\n        options: {\n          data: {\n            debug: false\n          }\n        },\n        files: [{\n          expand: true,\n          cwd: '<%= yeoman.client %>',\n          src: ['{app,components}/**/*.jade'],\n          dest: '.tmp',\n          ext: '.html'\n        }]\n      }\n    },\n\n    // Compiles ES6 to JavaScript using Babel\n    babel: {\n      options: {\n        sourceMap: true,\n        optional: [\n          'es7.classProperties'\n        ]\n      },\n      client: {\n        files: [{\n          expand: true,\n          cwd: '<%= yeoman.client %>',\n          src: ['{app,components}/**/!(*.spec).js'],\n          dest: '.tmp'\n        }]\n      },\n      server: {\n        options: {\n          optional: ['runtime']\n        },\n        files: [{\n          expand: true,\n          cwd: '<%= yeoman.server %>',\n          src: ['**/*.js'],\n          dest: '<%= yeoman.dist %>/<%= yeoman.server %>'\n        }]\n      }\n    },\n\n    // Compiles Sass to CSS\n    sass: {\n      server: {\n        options: {\n          compass: false\n        },\n        files: {\n          '.tmp/app/app.css' : '<%= yeoman.client %>/app/app.scss'\n        }\n      }\n    },\n\n    injector: {\n      options: {},\n      // Inject application script files into index.html (doesn't include bower)\n      scripts: {\n        options: {\n          transform: function(filePath) {\n            var yoClient = grunt.config.get('yeoman.client');\n            filePath = filePath.replace('/' + yoClient + '/', '');\n            filePath = filePath.replace('/.tmp/', '');\n            return '<script src=\"' + filePath + '\"></script>';\n          },\n          sort: function(a, b) {\n            var module = /\\.module\\.js$/;\n            var aMod = module.test(a);\n            var bMod = module.test(b);\n            // inject *.module.js first\n            return (aMod === bMod) ? 0 : (aMod ? -1 : 1);\n          },\n          starttag: '<!-- injector:js -->',\n          endtag: '<!-- endinjector -->'\n        },\n        files: {\n          '<%= yeoman.client %>/index.html': [\n               [\n                 '<%= yeoman.client %>/{app,components}/**/!(*.spec|*.mock|*-compiled).js',\n                 '!{.tmp,<%= yeoman.client %>}/app/app.{js,ts}'\n               ]\n            ]\n        }\n      },\n\n      // Inject component scss into app.scss\n      sass: {\n        options: {\n          transform: function(filePath) {\n            var yoClient = grunt.config.get('yeoman.client');\n            filePath = filePath.replace('/' + yoClient + '/app/', '');\n            filePath = filePath.replace('/' + yoClient + '/components/', '../components/');\n            return '@import \\'' + filePath + '\\';';\n          },\n          starttag: '// injector',\n          endtag: '// endinjector'\n        },\n        files: {\n          '<%= yeoman.client %>/app/app.scss': [\n            '<%= yeoman.client %>/{app,components}/**/*.{scss,sass}',\n            '!<%= yeoman.client %>/app/app.{scss,sass}'\n          ]\n        }\n      },\n\n      // Inject component css into index.html\n      css: {\n        options: {\n          transform: function(filePath) {\n            var yoClient = grunt.config.get('yeoman.client');\n            filePath = filePath.replace('/' + yoClient + '/', '');\n            filePath = filePath.replace('/.tmp/', '');\n            return '<link rel=\"stylesheet\" href=\"' + filePath + '\">';\n          },\n          starttag: '<!-- injector:css -->',\n          endtag: '<!-- endinjector -->'\n        },\n        files: {\n          '<%= yeoman.client %>/index.html': [\n            '<%= yeoman.client %>/{app,components}/**/*.css'\n          ]\n        }\n      }\n    },\n  });\n\n  // Used for delaying livereload until after server has restarted\n  grunt.registerTask('wait', function () {\n    grunt.log.ok('Waiting for server reload...');\n\n    var done = this.async();\n\n    setTimeout(function () {\n      grunt.log.writeln('Done waiting!');\n      done();\n    }, 1500);\n  });\n\n  grunt.registerTask('express-keepalive', 'Keep grunt running', function() {\n    this.async();\n  });\n\n  grunt.registerTask('serve', function (target) {\n    if (target === 'dist') {\n      return grunt.task.run(['build', 'env:all', 'env:prod', 'express:prod', 'wait', 'open', 'express-keepalive']);\n    }\n\n    if (target === 'debug') {\n      return grunt.task.run([\n        'clean:server',\n        'env:all',\n        'concurrent:pre',\n        'concurrent:server',\n        'injector',\n        'wiredep:client',\n        'postcss',\n        'concurrent:debug'\n      ]);\n    }\n\n    grunt.task.run([\n      'clean:server',\n      'env:all',\n      'concurrent:pre',\n      'concurrent:server',\n      'injector',\n      'wiredep:client',\n      'postcss',\n      'express:dev',\n      'wait',\n      'open',\n      'watch'\n    ]);\n  });\n\n  grunt.registerTask('server', function () {\n    grunt.log.warn('The `server` task has been deprecated. Use `grunt serve` to start a server.');\n    grunt.task.run(['serve']);\n  });\n\n  grunt.registerTask('test', function(target, option) {\n    if (target === 'server') {\n      return grunt.task.run([\n        'env:all',\n        'env:test',\n        'mochaTest:unit',\n        'mochaTest:integration'\n      ]);\n    }\n\n    else if (target === 'client') {\n      return grunt.task.run([\n        'clean:server',\n        'env:all',\n        'concurrent:pre',\n        'concurrent:test',\n        'injector',\n        'postcss',\n        'wiredep:test',\n        'karma'\n      ]);\n    }\n\n    else if (target === 'e2e') {\n\n      if (option === 'prod') {\n        return grunt.task.run([\n          'build',\n          'env:all',\n          'env:prod',\n          'express:prod',\n          'protractor'\n        ]);\n      }\n\n      else {\n        return grunt.task.run([\n          'clean:server',\n          'env:all',\n          'env:test',\n          'concurrent:pre',\n          'concurrent:test',\n          'injector',\n          'wiredep:client',\n          'postcss',\n          'express:dev',\n          'protractor'\n        ]);\n      }\n    }\n\n    else if (target === 'coverage') {\n\n      if (option === 'unit') {\n        return grunt.task.run([\n          'env:all',\n          'env:test',\n          'mocha_istanbul:unit'\n        ]);\n      }\n\n      else if (option === 'integration') {\n        return grunt.task.run([\n          'env:all',\n          'env:test',\n          'mocha_istanbul:integration'\n        ]);\n      }\n\n      else if (option === 'check') {\n        return grunt.task.run([\n          'istanbul_check_coverage'\n        ]);\n      }\n\n      else {\n        return grunt.task.run([\n          'env:all',\n          'env:test',\n          'mocha_istanbul',\n          'istanbul_check_coverage'\n        ]);\n      }\n\n    }\n\n    else grunt.task.run([\n      'test:server',\n      'test:client'\n    ]);\n  });\n\n  grunt.registerTask('build', [\n    'clean:dist',\n    'concurrent:pre',\n    'concurrent:dist',\n    'injector',\n    'wiredep:client',\n    'useminPrepare',\n    'postcss',\n    'ngtemplates',\n    'concat',\n    'ngAnnotate',\n    'copy:dist',\n    'babel:server',\n    'cdnify',\n    'cssmin',\n    'uglify',\n    'filerev',\n    'usemin'\n  ]);\n\n  grunt.registerTask('default', [\n    'newer:jshint',\n    'test',\n    'build'\n  ]);\n};\n"]}