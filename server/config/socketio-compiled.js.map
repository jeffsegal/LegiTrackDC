{"version":3,"sources":["socketio.js"],"names":[],"mappings":";;;AAGA;;AAEA,OAAO,MAAP,MAAmB,eAAnB;;;AAGA,SAAS,YAAT,CAAsB,MAAtB,EAA8B,EAA9B;;;AAIA,SAAS,SAAT,CAAmB,MAAnB,EAA2B;;AAEzB,SAAO,EAAP,CAAU,MAAV,EAAkB,QAAQ;AACxB,WAAO,GAAP,CAAW,KAAK,SAAL,CAAe,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAAX,EADwB;GAAR,CAAlB;;;AAFyB,SAOzB,CAAQ,+BAAR,EAAyC,QAAzC,CAAkD,MAAlD,EAPyB;AAQzB,UAAQ,2BAAR,EAAqC,QAArC,CAA8C,MAA9C,EARyB;CAA3B;;AAYA,eAAe,UAAS,QAAT,EAAmB;;;;;;;;;;;;;;;;AAgBhC,WAAS,EAAT,CAAY,YAAZ,EAA0B,UAAS,MAAT,EAAiB;AACzC,WAAO,OAAP,GAAiB,OAAO,OAAP,CAAe,UAAf,CAA0B,aAA1B,GACf,GADe,GACT,OAAO,OAAP,CAAe,UAAf,CAA0B,UAA1B,CAFiC;;AAIzC,WAAO,WAAP,GAAqB,IAAI,IAAJ,EAArB,CAJyC;;AAMzC,WAAO,GAAP,GAAa,UAAS,GAAG,IAAH,EAAS;AAC7B,cAAQ,GAAR,CAAY,CAAC,SAAD,GAAY,OAAO,GAAP,CAAW,IAAX,EAAgB,EAA5B,GAAgC,OAAO,OAAP,EAAe,CAA/C,CAAZ,EAA+D,GAAG,IAAH,CAA/D,CAD6B;KAAlB;;;AAN4B,UAWzC,CAAO,EAAP,CAAU,YAAV,EAAwB,MAAM;AAC5B,mBAAa,MAAb,EAD4B;AAE5B,aAAO,GAAP,CAAW,cAAX,EAF4B;KAAN,CAAxB;;;AAXyC,aAiBzC,CAAU,MAAV,EAjByC;AAkBzC,WAAO,GAAP,CAAW,WAAX,EAlByC;GAAjB,CAA1B,CAhBgC;CAAnB","file":"socketio-compiled.js","sourcesContent":["/**\n * Socket.io configuration\n */\n'use strict';\n\nimport config from './environment';\n\n// When the user disconnects.. perform this\nfunction onDisconnect(socket) {\n}\n\n// When the user connects.. perform this\nfunction onConnect(socket) {\n  // When the client emits 'info', this listens and executes\n  socket.on('info', data => {\n    socket.log(JSON.stringify(data, null, 2));\n  });\n\n  // Insert sockets below\n  require('../api/masters/masters.socket').register(socket);\n  require('../api/thing/thing.socket').register(socket);\n\n}\n\nexport default function(socketio) {\n  // socket.io (v1.x.x) is powered by debug.\n  // In order to see all the debug output, set DEBUG (in server/config/local.env.js) to including the desired scope.\n  //\n  // ex: DEBUG: \"http*,socket.io:socket\"\n\n  // We can authenticate socket.io users and access their token through socket.decoded_token\n  //\n  // 1. You will need to send the token in `client/components/socket/socket.service.js`\n  //\n  // 2. Require authentication here:\n  // socketio.use(require('socketio-jwt').authorize({\n  //   secret: config.secrets.session,\n  //   handshake: true\n  // }));\n\n  socketio.on('connection', function(socket) {\n    socket.address = socket.request.connection.remoteAddress +\n      ':' + socket.request.connection.remotePort;\n\n    socket.connectedAt = new Date();\n\n    socket.log = function(...data) {\n      console.log(`SocketIO ${socket.nsp.name} [${socket.address}]`, ...data);\n    };\n\n    // Call onDisconnect.\n    socket.on('disconnect', () => {\n      onDisconnect(socket);\n      socket.log('DISCONNECTED');\n    });\n\n    // Call onConnect.\n    onConnect(socket);\n    socket.log('CONNECTED');\n  });\n}\n"]}