{"version":3,"sources":["app.js"],"names":[],"mappings":";;;;AAIA;;AAEA,OAAO,OAAP,MAAoB,SAApB;AACA,OAAO,QAAP,MAAqB,UAArB;AACA,SAAS,OAAT,GAAmB,QAAQ,UAAR,CAAnB;AACA,OAAO,MAAP,MAAmB,sBAAnB;AACA,OAAO,IAAP,MAAiB,MAAjB;;;AAGA,SAAS,OAAT,CAAiB,OAAO,KAAP,CAAa,GAAb,EAAkB,OAAO,KAAP,CAAa,OAAb,CAAnC;AACA,SAAS,UAAT,CAAoB,EAApB,CAAuB,OAAvB,EAAgC,UAAS,GAAT,EAAc;AAC5C,UAAQ,KAAR,CAAc,+BAA+B,GAA/B,CAAd,CAD4C;AAE5C,UAAQ,IAAR,CAAa,CAAC,CAAD,CAAb,CAF4C;CAAd,CAAhC;;;AAMA,IAAI,OAAO,MAAP,EAAe;AAAE,UAAQ,eAAR,EAAF;CAAnB;;;AAGA,QAAQ,4BAAR;;;AAGA,IAAI,MAAM,SAAN;AACJ,IAAI,SAAS,KAAK,YAAL,CAAkB,GAAlB,CAAT;AACJ,IAAI,WAAW,QAAQ,WAAR,EAAqB,MAArB,EAA6B;AAC1C,eAAa,OAAO,GAAP,KAAe,YAAf;AACb,QAAM,mBAAN;CAFa,CAAX;AAIJ,QAAQ,mBAAR,EAA6B,QAA7B;AACA,QAAQ,kBAAR,EAA4B,GAA5B;AACA,QAAQ,UAAR,EAAoB,GAApB;;;AAGA,SAAS,WAAT,GAAuB;AACrB,MAAI,gBAAJ,GAAuB,OAAO,MAAP,CAAc,OAAO,IAAP,EAAa,OAAO,EAAP,EAAW,YAAW;AACtE,YAAQ,GAAR,CAAY,4CAAZ,EAA0D,OAAO,IAAP,EAAa,IAAI,GAAJ,CAAQ,KAAR,CAAvE,EADsE;GAAX,CAA7D,CADqB;CAAvB;;AAMA,aAAa,WAAb;;;AAGA,UAAU,OAAO,OAAP,GAAiB,GAAjB","file":"app-compiled.js","sourcesContent":["/**\n * Main application file\n */\n\n'use strict';\n\nimport express from 'express';\nimport mongoose from 'mongoose';\nmongoose.Promise = require('bluebird');\nimport config from './config/environment';\nimport http from 'http';\n\n// Connect to MongoDB\nmongoose.connect(config.mongo.uri, config.mongo.options);\nmongoose.connection.on('error', function(err) {\n  console.error('MongoDB connection error: ' + err);\n  process.exit(-1);\n});\n\n// Populate databases with sample data\nif (config.seedDB) { require('./config/seed'); }\n\n// Populate masters collection with LIMS masters values\nrequire('./config/masters-populator');\n\n// Setup server\nvar app = express();\nvar server = http.createServer(app);\nvar socketio = require('socket.io')(server, {\n  serveClient: config.env !== 'production',\n  path: '/socket.io-client'\n});\nrequire('./config/socketio')(socketio);\nrequire('./config/express')(app);\nrequire('./routes')(app);\n\n// Start server\nfunction startServer() {\n  app.angularFullstack = server.listen(config.port, config.ip, function() {\n    console.log('Express server listening on %d, in %s mode', config.port, app.get('env'));\n  });\n}\n\nsetImmediate(startServer);\n\n// Expose app\nexports = module.exports = app;\n"]}