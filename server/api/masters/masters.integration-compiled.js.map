{"version":3,"sources":["masters.integration.js"],"names":[],"mappings":"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","file":"masters.integration-compiled.js","sourcesContent":["'use strict';\n\nvar app = require('../..');\nimport request from 'supertest';\n\nvar newMasters;\n\ndescribe('Masters API:', function() {\n\n  describe('GET /api/masters', function() {\n    var masterss;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/masters')\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          masterss = res.body;\n          done();\n        });\n    });\n\n    it('should respond with JSON array', function() {\n      masterss.should.be.instanceOf(Array);\n    });\n\n  });\n\n  describe('POST /api/masters', function() {\n    beforeEach(function(done) {\n      request(app)\n        .post('/api/masters')\n        .send({\n          name: 'New Masters',\n          info: 'This is the brand new masters!!!'\n        })\n        .expect(201)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          newMasters = res.body;\n          done();\n        });\n    });\n\n    it('should respond with the newly created masters', function() {\n      newMasters.name.should.equal('New Masters');\n      newMasters.info.should.equal('This is the brand new masters!!!');\n    });\n\n  });\n\n  describe('GET /api/masters/:id', function() {\n    var masters;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/masters/' + newMasters._id)\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          masters = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      masters = {};\n    });\n\n    it('should respond with the requested masters', function() {\n      masters.name.should.equal('New Masters');\n      masters.info.should.equal('This is the brand new masters!!!');\n    });\n\n  });\n\n  describe('PUT /api/masters/:id', function() {\n    var updatedMasters;\n\n    beforeEach(function(done) {\n      request(app)\n        .put('/api/masters/' + newMasters._id)\n        .send({\n          name: 'Updated Masters',\n          info: 'This is the updated masters!!!'\n        })\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end(function(err, res) {\n          if (err) {\n            return done(err);\n          }\n          updatedMasters = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      updatedMasters = {};\n    });\n\n    it('should respond with the updated masters', function() {\n      updatedMasters.name.should.equal('Updated Masters');\n      updatedMasters.info.should.equal('This is the updated masters!!!');\n    });\n\n  });\n\n  describe('DELETE /api/masters/:id', function() {\n\n    it('should respond with 204 on successful removal', function(done) {\n      request(app)\n        .delete('/api/masters/' + newMasters._id)\n        .expect(204)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n    it('should respond with 404 when masters does not exist', function(done) {\n      request(app)\n        .delete('/api/masters/' + newMasters._id)\n        .expect(404)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n  });\n\n});\n"]}